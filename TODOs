Application:
Apache Server
Flask app, web interface

Device connections:
Picamera
Arduino

Programs:
Arduino, drive and camera controls
Drive: forward, backward, spin left, spin right, forward/right, forward/left
Camera: pan left, pan right, tilt up, tilt down

Flask frontend, html, forms, API calls
HTML/forms: video feed render, buttons for all drive and camera operations
API calls: video generator call, calls for all drive and camera operations

Flask backend, arduino interface
Class for robot object, connects to arduino, operations correspond to application

robot class: (python)
send message [left, right, speed, pan delta, tilt delta]
forward: message[0] = 2, message[1] = 2
backward: message[0] = 0, message[1] = 0
spin_left: message[0] = 0; message[1] = 2
spin_right: message[0] = 2; message[1] = 0
forward_right: message[0] = 2; message[1] = 1
forward_left: message[0] = 1; message[1] = 2
stop: message[0] = 1; message[1] = 1
pan_left: param distance, message[3] = distance
pan_right: param distance, message[3] = -distance
tilt_up: param distance, message[4] = distance
tilt_down: param distance, message[4] = -distance


arduino program
parse message

setup
open serial port
setup robot object

loop
get message, send to robot object
delay(50)

robot class:
setup constructor
set left wheel direction: case message[0]: 0: backward 1: release 2: forward
set right wheel direction: case message[1]: 0: backward 1: release 2: forward
set wheel speed: message[2]
set servo pan: x -= message[3]
set servo tilt: y -= message[3]

